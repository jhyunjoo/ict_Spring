1. AOP(Aspect Oriented Programming)란 
	횡단관심(공통모듈) - 메서드마다 공통으로 등장하는 로깅이나, 예외처리, 트랜잭션 처리 같은 코드
	핵심관심 - 사용자의 요청에 따라 실제로 수행되는 핵심 비즈니스 로직
	두 관심을 완벽하게 분리하여, 핵심관심에 핵심비즈니스 로직만을 구성함으로써 간결하고 응집도 높은 코드를 효과적으로 구현할 수 있다.
	
	[ 용어정리 ]
	
	. 조인포인트(Joinpoint)
	 - 클라이언트가 호출하는 모든 비즈니스 메서드
	 - '포인트컷 대상' 또는 '포인트컷 후보'라고 하며, 조인포인트중에서 포인트컷이 선택되기 때문
	 
	. 포인트컷(Pointcut)
	 - 필터링된 조인포인트를 의미
	 - 등록,수정,삭제 기능의 비즈니스 메서드에 트랜잭션 횡단관심 적용, 검색 기능은 트랜잭션과 무관하므로 횡단관심 제외
	 
	. 어드바이스(Advice)
	- 횡단관심에 해당하는 공통기능의 코드를 의미
	- 독립된 클래스의 메서드로 작성
	- 어드바이스로 구현된 메서드가 언제 동작할지 스프링설정파일을 통해서 지정
	
	. 위빙(Weaving)
	- 포인트컷으로 지정한 핵심관심 메서드가 호출될 때, 어드바이스에 해당하는 횡단관심 메서드가 삽입되는 과정을 의미한다.
	
	. 애스펙트(Aspect)
	- Aspect는 포인트컷  + 어드바이스 결합
	- 어떤 포인트컷 메서드에 대해서 어떤 어드바이스 메서드를 실행할지 결정한다.
	 
	
2. 플젝 생성 ----------------------------------
1) 자바 설정
	
	- project 우클릭 > properties > Project Facets > java를 11로 변경
	Runtimes 탭에서 Apache Tomcat v9.0 클릭 > Apply 버튼
	
	- project 우클릭 > properties > Java Build Path > Library 탭 > jre System library 선택후 Edit 선택 / 또는 jre  System library 더블클릭
	> 세번째 workspace default JRE(jre1.11.0_xxx) 선택
	
	- java compiler - 11버전 확인
	
2) pom.xml에 버전 반영
	<properties>
		<java-version>11</java-version>
		<org.springframework-version>5.1.8.RELEASE</org.springframework-version>


3) pom.xml에 aop 라이브러리 등록	=> namespace에 aop가 추가된다.
                               ProceedingJoinPoint 클래스 사용가능
	https://mvnrepository.com/에서 aspectj weaver 검색 -> 1.9.6 선택후 복사해서 pom.xml에 추가한다.
	
	
	[ AOP 필수 라이브러리 ]
<!-- pom.xml에 추가안하면 import는 되지만 실행오류가 난다. -->	
<!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
<!-- 예전 버전
<dependency>
    <groupId>org.aspectj</groupId>
    <artifactId>aspectjweaver</artifactId>
    <version>1.9.6</version>
</dependency>
-->

<!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
<dependency>
    <groupId>org.aspectj</groupId>
    <artifactId>aspectjweaver</artifactId>
    <version>1.9.22.1</version>
    <scope>runtime</scope>
</dependency>

<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-aop</artifactId>
    <version>${org.springframework-version}</version>   <!-- 버전 주의. org.springframework-version을 따라간다 -->
</dependency>


///////////////////////////////////////////
		
------ aopalliance-1.0.jar (지정된 파일을 찾을 수 없습니다) 오류   ------- 
<!-- pom.xml 추가 -->
<dependency>
    <groupId>aopalliance</groupId>
    <artifactId>aopalliance</artifactId>
    <version>1.0</version>
</dependency>


------ CGLIB 오류   ----------------------------
<!-- pom.xml 추가 -->
mvnrepository.com : CGLIB 대문자 검색
  <dependency>
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>cglib</artifactId>
      <version>3.1.1</version>
  </dependency>
---------------------------------------------  
   
<!-- https://mvnrepository.com/artifact/org.aspectj/aspectjrt 1번째 -->
<dependency>
    <groupId>org.aspectj</groupId>
    <artifactId>aspectjrt</artifactId>
    <version>${org.aspectj-version}</version>	<!-- 버전 주의 -->
</dependency> 

*******  그래도 오류시 이클립스 껐다 킨다.   ************



3. 소스 작성 ------------------------------------------

0) 테스트 : http://localhost/aop_ict05/에서 실행 => Hello World 화면 확인

1) 비즈니스 로직 클래스 작성 - 핵심관심 - Member.java

2) 횡단관심 작성 - LogAop 클래스

3) XML 파일 작성 
   - src/main/resources 폴더 우클릭 > new > Spring Bean Configuration File 선택 > aopContext_01.xml 생성
   - namespace 탭에서 aop를 클릭해서 추가한다.
   

4) Main 클래스 작성

5) 실행 : Main 클래스 우클릭 > Run as > Java Application 선택


// 실행결과
public void com.spring.aop_ict05.basic.Member.getMemberInfo() is start!!
---- 핵심관심(비즈니스 로직) : 멤버변수 정보 출력 ----
id : kim
pwd : kim1234
name : 김태희
hobby : 광고찍기

public void com.spring.aop_ict05.basic.Member.getMemberInfo() is end!!
public void com.spring.aop_ict05.basic.Member.getMemberInfo() 경과시간 : 9
